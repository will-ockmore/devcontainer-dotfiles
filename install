#!/usr/bin/env python3

from pathlib import Path
from urllib.request import urlopen, urlretrieve
import json
import os
import subprocess


ADDITIONAL_PROGRAMS = ["ripgrep", "fzf", "bat", "exa"]

BOLD_CYAN = "\x1b[36;1m"
BOLD_WHITE = "\x1b[37;1m"
BOLD_GREEN = "\x1b[32;1m"
RESET = "\x1b[0m"


def create_symlinks(dotfiles_dir_path: Path, dir_path: Path):
    # Lifted verbatim from wayflyer/dotfiles
    for entry in os.scandir(dir_path):
        entry_path = dir_path / entry.name
        entry_path_rel = entry_path.relative_to(dotfiles_dir_path)
        local_path = Path(Path.home() / entry_path_rel)
        if entry.is_dir():
            if not local_path.exists():
                local_path.mkdir()
            create_symlinks(dotfiles_dir_path, entry_path)
        else:
            local_path.symlink_to(entry_path)


def copy_dotfiles():
    print(f"{BOLD_WHITE}Moving configuration files...{RESET}")
    print()

    dotfiles_dir = Path(__file__).parent / "dotfiles"

    create_symlinks(dotfiles_dir, dotfiles_dir)


def copy_nvim_config():
    print(f"{BOLD_WHITE}Setting up init.nvim...{RESET}")
    print()
    nvim_config_dir = Path.home() / ".config/nvim"
    nvim_config_dir.mkdir(parents=True, exist_ok=True)

    # nvim configuration
    urlretrieve(
        "https://raw.githubusercontent.com/will-ockmore/vimrc/master/init.vim",
        nvim_config_dir / "init.vim",
    )

    coc_settings = json.loads(
        urlopen(
            "https://raw.githubusercontent.com/will-ockmore/vimrc/master/coc-settings.json"
        ).read()
    )
    del coc_settings["python.formatting.blackPath"]

    with open(nvim_config_dir / "coc-settings.json", "w+") as outfile:
        json.dump(coc_settings, outfile)


def install_programs():
    print(f"{BOLD_WHITE}Installing additional programs...{RESET}")
    print()

    # Fetch latest package lists
    subprocess.run(["apt", "update"], check=True)

    subprocess.run(["apt", "install", "-y", *ADDITIONAL_PROGRAMS], check=True)

    # Install latest neovim
    urlretrieve("https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.deb")

    subprocess.run(["apt", "install", "./nvim-linux64.deb"], check=True)

    # Install pure prompt
    zsh_dir = Path.home() / ".zsh"
    zsh_dir.mkdir(parents=True, exist_ok=True)
    subprocess.run(
        [
            "git",
            "clone",
            "https://github.com/sindresorhus/pure.git",
            str(zsh_dir / "pure"),
        ],
        check=True,
    )


def main():
    print()
    print(f"Running {BOLD_CYAN}dotfiles install script{RESET} ðŸ’¿")
    print()

    copy_dotfiles()
    copy_nvim_config()
    install_programs()

    print()
    print(f"{BOLD_GREEN}dotfiles installation complete{RESET} ðŸš€")
    print()


if __name__ == "__main__":
    main()
