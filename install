#!/usr/bin/env python3

import os
import shutil
import subprocess
from pathlib import Path
from urllib.request import urlretrieve

ADDITIONAL_PROGRAMS = ["bat", "exa", "tig", "fzf", "neovim", "ripgrep"]

BOLD_CYAN = "\x1b[36;1m"
BOLD_WHITE = "\x1b[37;1m"
BOLD_GREEN = "\x1b[32;1m"
RESET = "\x1b[0m"


def create_symlinks(dotfiles_dir_path: Path, dir_path: Path):
    # Lifted verbatim from wayflyer/dotfiles
    for entry in os.scandir(dir_path):
        entry_path = dir_path / entry.name
        entry_path_rel = entry_path.relative_to(dotfiles_dir_path)
        local_path = Path.home() / entry_path_rel
        if entry.is_dir():
            if not local_path.exists():
                local_path.mkdir()
            create_symlinks(dotfiles_dir_path, entry_path)
        else:
            if local_path.exists():
                local_path.unlink()
            local_path.symlink_to(entry_path)


def copy_dotfiles():
    print()
    print(f"{BOLD_WHITE}Moving configuration files...{RESET}")
    print()

    dotfiles_dir = Path(__file__).parent / "dotfiles"

    create_symlinks(dotfiles_dir, dotfiles_dir)


def copy_nvim_config():
    print()
    print(f"{BOLD_WHITE}Setting up init.nvim...{RESET}")
    print()
    nvim_config_dir = Path.home() / ".config/nvim"
    nvim_config_dir.mkdir(parents=True, exist_ok=True)

    # nvim configuration
    urlretrieve(
        "https://raw.githubusercontent.com/will-ockmore/vimrc/master/devcontainer-init.vim",
        nvim_config_dir / "init.vim",
    )


def install_programs():
    print()
    print(f"{BOLD_WHITE}Installing additional programs...{RESET}")
    print()

    # Fetch latest package lists
    subprocess.run(["apt", "update", "-q"], check=True)

    dependencies = ADDITIONAL_PROGRAMS

    subprocess.run(
        ["apt", "install", "-yq", *dependencies],
        check=True,
    )

    # Install pure prompt
    zsh_dir = Path.home() / ".zsh"
    zsh_dir.mkdir(parents=True, exist_ok=True)
    pure_dir = zsh_dir / "pure"

    if pure_dir.exists():
        shutil.rmtree(pure_dir)

    subprocess.run(
        [
            "git",
            "clone",
            "https://github.com/sindresorhus/pure.git",
            pure_dir,
        ],
        check=True,
    )


def main():
    print()
    print(f"{BOLD_CYAN}Running dotfiles install script{RESET} ðŸ’¿")
    print()

    copy_dotfiles()
    copy_nvim_config()
    install_programs()

    print()
    print(f"{BOLD_GREEN}dotfiles installation complete{RESET} ðŸš€")
    print()


if __name__ == "__main__":
    main()
