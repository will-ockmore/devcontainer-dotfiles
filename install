#!/usr/bin/env python3

from pathlib import Path
from urllib.request import urlopen
import os
import shutil
import subprocess
import sys

"""
TODO: Install:
    - ripgrep
    - fzf
    - bat
    - exa
    - neovim
    - pure prompt
    
TODO: Copy over:
    - .zshrc
    - aliases
    - init.vim and coc-settings.json
"""

ADDITIONAL_PROGRAMS = ["ripgrep", "fzf", "bat", "neovim", "exa"]

RED = "\x1b[31;20m"
BOLD_CYAN = "\x1b[36;1m"
BOLD_WHITE = "\x1b[37;1m"
RESET = "\x1b[0m"


def create_symlinks(dotfiles_dir_path: Path, dir_path: Path):
    # Lifted verbatim from wayflyer/dotfiles
    for entry in os.scandir(dir_path):
        entry_path = dir_path / entry.name
        entry_path_rel = entry_path.relative_to(dotfiles_dir_path)
        local_path = Path(Path.home() / entry_path_rel)
        if entry.is_dir():
            if not local_path.exists():
                local_path.mkdir()
            create_symlinks(dotfiles_dir_path, entry_path)
        else:
            local_path.symlink_to(entry_path)


def copy_dotfiles():
    print(f"{BOLD_WHITE}Moving configuration files...{RESET}")
    print()

    dotfiles_dir = Path(__file__).parent / "dotfiles"

    create_symlinks(dotfiles_dir, dotfiles_dir)


def install_programs():
    print(f"{BOLD_WHITE}Installing additional programs...{RESET}")
    print()

    # Fetch latest package lists
    subprocess.run(["apt", "update"], check=True)

    subprocess.run(["apt", "install", "-y", *ADDITIONAL_PROGRAMS], check=True)

    # Install pure prompt
    (Path.home() / ".zsh").mkdir(parents=True, exist_ok=True)
    subprocess.run(
        [
            "git",
            "clone",
            "https://github.com/sindresorhus/pure.git",
            str(Path.home() / ".zsh/pure"),
        ],
        check=True,
    )


def main():
    print()
    print(f"Running {BOLD_CYAN}dotfiles install script{RESET} ðŸ’¿")
    print()

    copy_dotfiles()
    install_programs()


if __name__ == "__main__":
    main()
